// Generated by CoffeeScript 1.4.0
(function() {
  var numbers, suits,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  suits = ["spades", "hearts", "diamonds", "clubs"];

  numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10, "Jack", "Queen", "King", "Ace"];

  window.Card = (function(_super) {

    __extends(Card, _super);

    function Card() {
      return Card.__super__.constructor.apply(this, arguments);
    }

    Card.prototype.initialize = function() {
      return this.set({
        number: 2 + Math.floor(Math.random() * 13),
        suit: Math.floor(Math.random() * 4)
      });
    };

    Card.prototype.describe = function() {
      return numbers[this.get('number') - 2] + ' of ' + suits[this.get('suit')];
    };

    Card.prototype.evaluate = function(score) {
      var _ref;
      if ((9 < (_ref = this.get('number')) && _ref < 14)) {
        return 10;
      } else if (this.get('number') === 14) {
        if (score > 10) {
          return 1;
        } else {
          return 11;
        }
      } else {
        return this.get('number');
      }
    };

    return Card;

  })(Backbone.Model);

}).call(this);
